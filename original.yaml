openapi: 3.0.1
info:
  version: 1.0.0
  title: Products API
  description: Manages products.
tags:
  - name: Products
paths:
  /products:
    get:
      summary: List products
      description: Retrieves a paginated list of products.
      operationId: list-products
      tags:
        - Products
      parameters:
        - $ref: '#/components/parameters/Vendor'
        - in: query
          name: filter[owner_id]
          description: Allows filtering by `owner_id`.
          schema:
            type: string
        - in: query
          name: filter[external_id]
          description: Allows filtering by `external_id`.
          schema:
            type: string
          x-internal: true
        - in: query
          name: filter[deleted]
          description: Allows filtering by `deleted`.
          schema:
            type: boolean
          x-internal: true
        - in: query
          name: page
          description: The page number.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        default:
          description: Error response.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/{product_id}:
    get:
      summary: Get product
      description: Retrieves the specified product.
      operationId: get-product
      tags:
        - Products
      parameters:
        - $ref: '#/components/parameters/ProductID'
        - $ref: '#/components/parameters/Vendor'
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: Error response.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the product.
        owner_id:
          type: string
          format: uuid
          description: The ID of the owner.
        external_id:
          type: string
          description: The external ID (in the ERP).
          x-internal: true
        label:
          type: string
          description: The human-readable label of the product.
        vendor:
          type: string
          description: The vendor.
          x-internal: true
        deleted:
          type: boolean
          description: Whether the product has been deleted.
          x-internal: true
        created_at:
          type: string
          format: date-time
          description: The date and time when the product was created.
        updated_at:
          type: string
          format: date-time
          description: The date and time when the product was last updated.
    Error:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: A URI reference that identifies the problem type.
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 404
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
  parameters:
    ProductID:
      in: path
      name: product_id
      description: The ID of the product.
      required: true
      schema:
        type: string
        format: uuid
    Vendor:
      in: header
      name: X-Vendor
      description: The vendor.
      schema:
        type: string
      x-internal: true
